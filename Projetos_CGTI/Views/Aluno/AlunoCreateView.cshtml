@model Projetos_CGTI.Models.AlunoViewModel

<script type="text/javascript">
    jQuery(function ($) {
        $("#CPF").mask("999.999.999-99", { placeholder: "000.000.000-00" });
        $("#Celular").mask("(99) 99999-9999", { placeholder: "(00) 00000-0000" });
        $("#cep").mask("99999-999", { placeholder: "00000-00" });
        $("#Telefone").mask("(99) 9999-9999", { placeholder: "(00) 0000-0000" });
    });
</script>

<script type="text/javascript">
    function returnCEP() {
        document.getElementById("Cep").submit();
    }
</script>

<!-- Adicionando JQuery -->
<script src="https://code.jquery.com/jquery-3.2.1.min.js"
        integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
        crossorigin="anonymous"></script>

<!-- Adicionando Javascript -->
<script type="text/javascript">

    $(document).ready(function () {

        function limpa_formulário_cep() {
            // Limpa valores do formulário de cep.
            $("#rua").val("");
            $("#bairro").val("");
            $("#cidade").val("");
            $("#uf").val("");
            $("#ibge").val("");
        }

        //Quando o campo cep perde o foco.
        $("#cep").blur(function () {

            //Nova variável "cep" somente com dígitos.
            var cep = $(this).val().replace(/\D/g, '');

            //Verifica se campo cep possui valor informado.
            if (cep != "") {

                //Expressão regular para validar o CEP.
                var validacep = /^[0-9]{8}$/;

                //Valida o formato do CEP.
                if (validacep.test(cep)) {

                    //Preenche os campos com "..." enquanto consulta webservice.
                    $("#rua").val("...");
                    $("#bairro").val("...");
                    $("#cidade").val("...");
                    $("#uf").val("...");
                    $("#ibge").val("...");

                    //Consulta o webservice viacep.com.br/
                    $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                        if (!("erro" in dados)) {
                            //Atualiza os campos com os valores da consulta.
                            $("#rua").val(dados.logradouro);
                            $("#bairro").val(dados.bairro);
                            $("#cidade").val(dados.localidade);
                            $("#uf").val(dados.uf);
                            $("#ibge").val(dados.ibge);
                        } //end if.
                        else {
                            //CEP pesquisado não foi encontrado.
                            limpa_formulário_cep();
                            alert("CEP não encontrado.");
                        }
                    });
                } //end if.
                else {
                    //cep é inválido.
                    limpa_formulário_cep();
                    alert("Formato de CEP inválido.");
                }
            } //end if.
            else {
                //cep sem valor, limpa formulário.
                limpa_formulário_cep();
            }
        });
    });

</script>


<html>
<head>
    <meta name="viewport" content="width=device-width" />
</head>

<body>
    @if (!string.IsNullOrEmpty(@ViewBag.Menssagem))
    {
        <div class="alert alert-success">
            <strong>@ViewBag.Menssagem</strong>
        </div>
    }

    @using (Html.BeginForm("AlunoCreateView", "Aluno", FormMethod.Post, new { @id = "Cep" }))
    {

        @Html.AntiForgeryToken()
        <h1>Formulário de Inscrição</h1>

        @Html.HiddenFor(model => model.ID)

        <div class="panel panel-primary" style="margin-top: 10px">
            <div class="panel-heading">Aluno do Projeto</div>
            <div class="panel-body">
                <div class="col-md-12">
                    <div class="row">

                        <div class="col-md-5">
                            @Html.LabelFor(model => model.Nome_Projeto)
                            @Html.DropDownListFor(model => model.Nome_Projeto, new SelectList(this.Model.listProjeto, "Nome", "Nome"), "Seleciome o Projeto", new { @class = "form-control" })                          
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-primary" style="margin-top: 10px">
            <div class="panel-heading">Dados do Beneficiário</div>
            <div class="panel-body">
                <div class="col-md-12">
                    <div class="row">

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Nome_Aluno)
                            @Html.EditorFor(model => model.Nome_Aluno, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nome_Aluno, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.DataNascimento)
                            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", style = "text-align:center" } })
                            @*@Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Sexo)
                            @Html.DropDownListFor(model => model.Sexo, new SelectList(this.Model.SexoList, "Text", "Value"), "Seleciome o Sexo", new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-1">
                            @Html.LabelFor(model => model.Peso)
                            @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-1">
                            @Html.LabelFor(model => model.Alttura)
                            @Html.EditorFor(model => model.Alttura, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Alttura, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.RG)
                            @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control", style = "text-align:center" } })
                            @*@Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.CPF)
                            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", id = "CPF", placeholder = "EX. 000.000.000-00", style = "text-align:center" } })
                            @*@Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-5">
                            @Html.LabelFor(model => model.Problema_Saude)
                            @Html.EditorFor(model => model.Problema_Saude, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Problema_Saude, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-5">
                            @Html.LabelFor(model => model.Deficiencia)
                            @Html.EditorFor(model => model.Deficiencia, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Deficiencia, "", new { @class = "text-danger" })*@
                        </div>


                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Nome_Escola)
                            @Html.EditorFor(model => model.Nome_Escola, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Nome_Escola, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-1">
                            @Html.LabelFor(model => model.Seri)
                            @Html.DropDownListFor(model => model.Seri, new SelectList(this.Model.SeieList, "Text", "Value"), "Serie", new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.Seri, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Tipo_Escola)
                            @Html.DropDownListFor(model => model.Tipo_Escola, new SelectList(this.Model.EscolaList, "Text", "Value"), "Seleciome o Tipo de Escola", new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.Tipo_Escola, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Periodo)
                            @Html.DropDownListFor(model => model.Periodo, new SelectList(this.Model.PeriodoList, "Text", "Value"), "Seleciome o Periodo", new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.Periodo, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Email)
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-primary" style="margin-top: 10px">
            <div class="panel-heading">Uniforme</div>
            <div class="panel-body">
                <div class="col-md-12">
                    <div class="row">

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.T_Camiseta)
                            @Html.DropDownListFor(model => model.T_Camiseta, new SelectList(this.Model.CamisetaLista, "Text", "Value"), "Seleciome Tamanho", new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.T_Camiseta, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.T_Short)
                            @Html.DropDownListFor(model => model.T_Short, new SelectList(this.Model.ShortLista, "Text", "Value"), "Seleciome Tamanho", new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.T_Short, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.T_Tenis)
                            @Html.DropDownListFor(model => model.T_Tenis, new SelectList(this.Model.TenisList, "Text", "Value"), "Seleciome Tamanho", new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.T_Tenis, "", new { @class = "text-danger" })*@
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-primary" style="margin-top: 10px">
            <div class="panel-heading">Dados do Responsável</div>
            <div class="panel-body">
                <div class="col-md-12">
                    <div class="row">

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Nome_responsavel)
                            @Html.EditorFor(model => model.Nome_responsavel, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Nome_responsavel, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.RG_Responsagel)
                            @Html.EditorFor(model => model.RG_Responsagel, new { htmlAttributes = new { @class = "form-control", style = "text-align:center" } })
                            @*@Html.ValidationMessageFor(model => model.RG_Responsagel, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Parentesco)
                            @Html.DropDownListFor(model => model.Parentesco, new SelectList(this.Model.ParentescoList, "Text", "Value"), "Grau de Parentesco", new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.Parentesco, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.CEP)
                            @*@Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", style = "text-align:center", placeholder = "Ex 00000-00", id = "Cep", @onblur = "returnCEP();" } })*@
                            @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", style = "text-align:center", placeholder = "Ex 00000-000", id = "cep" } })
                            @*@Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-5">
                            @Html.LabelFor(model => model.Endereco)
                            @Html.EditorFor(m => m.Endereco, new { htmlAttributes = new { @class = "form-control", id = "rua" } })
                            @*@Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-1">
                            @Html.LabelFor(model => model.Numero)
                            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Bairro)
                            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", id = "bairro" } })
                            @*@Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Cidade)
                            @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", id = "cidade" } })
                            @*@Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-1">
                            @Html.LabelFor(model => model.Estado)
                            @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", id = "uf" } })
                            @*@Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Telefone)
                            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", id = "Telefone", placeholder = "Ex (00) 0000-0000", style = "text-align:center" } })
                            @*@Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Celular)
                            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control", id = "Celular", placeholder = "Ex. (00) 00000-0000", style = "text-align:center" } })
                            @*@Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-5">
                            @Html.LabelFor(model => model.Email_Responsavel)
                            @Html.EditorFor(model => model.Email_Responsavel, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Email_Responsavel, "", new { @class = "text-danger" })*@
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-2">
                <button type="submit" class="Botao_CGTI" value="Salvar">Salvar</button>
            </div>

            <div class="col-md-3">
                @Html.ActionLink("Voltar", "AlunoView", null, new { @class = "btn Botao_CGTI" })
            </div>
        </div>
    }

</body>



</html>
